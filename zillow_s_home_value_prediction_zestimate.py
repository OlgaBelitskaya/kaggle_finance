# -*- coding: utf-8 -*-
"""zillow-s-home-value-prediction-zestimate.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/133Vz3B77wPfwCO72UhS1ES-cL-aciiaO

## &#x1F4D1; &nbsp; Zillowâ€™s Home Value Prediction (Zestimate)

<h1 class='font-effect-3d' style='color:#ff355e; font-family:Akronim;'> Python Modules, Styling, Helpful Functions, and Links</h1>
"""

# Commented out IPython magic to ensure Python compatibility.
# %%html
# <style> 
# @import url('https://fonts.googleapis.com/css?family=Akronim|Roboto&effect=3d|fire-animation');
# a,h2 {color:#ff355e; font-family:Roboto;} 
# span {color:black; font-family:Roboto; text-shadow:4px 4px 4px #aaa;}
# div.output_prompt,div.output_area pre {color:slategray;}
# div.input_prompt,div.output_subarea {color:#ff355e;}      
# div.output_stderr pre {background-color:gainsboro;}  
# div.output_stderr {background-color:slategrey;}       
# </style>

import warnings; warnings.filterwarnings('ignore')
import pandas as pd,numpy as np,os,sqlite3
import seaborn as sn,pylab as pl
import keras as ks,tensorflow as tf
pl.style.use('seaborn-whitegrid')
np.set_printoptions(precision=8)

"""<h1 class='font-effect-3d' style='color:#ff355e; font-family:Akronim;'>Data</h1>"""

train_2016=pd.read_csv("../input/train_2016_v2.csv",
                       parse_dates=["transactiondate"])
properties_2016=pd.read_csv("../input/properties_2016.csv")
train_2017=pd.read_csv("../input/train_2017.csv",
                       parse_dates=["transactiondate"])
properties_2017=pd.read_csv("../input/properties_2017.csv")

train_2016.describe(),train_2017.describe()

properties_2016.head().T

pl.figure(1,figsize=(12,6))
sn.distplot(train_2016['logerror'],
            color='#ff355e',bins=1000)
pl.ylabel("Distribution")
pl.xlabel("LogError"); pl.xlim(-.5,.5)
pl.suptitle('Zestimate Logerror',fontsize=15);

data2016=train_2016['transactiondate'].dt.month.value_counts()
data2017=train_2017['transactiondate'].dt.month.value_counts()
pl.figure(1,figsize=(12,4)); pl.subplot(121)
sn.barplot(data2016.index,data2016.values,color='#ff355e',alpha=.7)
pl.ylabel("Number of Occurrences")
pl.xlabel("Month of Transactions 2016")
pl.subplot(122)
sn.barplot(data2017.index,data2017.values,color='crimson',alpha=.7)
pl.ylabel("Number of Occurrences")
pl.xlabel("Month of Transactions 2017")
pl.suptitle('Zestimate Logerror',fontsize=15);

properties_2016.isnull().sum(axis=0).sort_values()\
.plot(kind='bar',figsize=(12,4),color='#ff355e',title='2016');

properties_2017.isnull().sum(axis=0).sort_values()\
.plot(kind='bar',figsize=(12,4),color='crimson',title='2017');

fig,ax=pl.subplots(ncols=2,nrows=1,figsize=(12,6))
properties_2016.plot(kind='scatter',ax=ax[0],
                     x='latitude',y='longitude',
                     color='#ff355e',s=.1)
properties_2017.plot(kind='scatter',ax=ax[1],
                     x='latitude',y='longitude',
                     color='crimson',s=.1);